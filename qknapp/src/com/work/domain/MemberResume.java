package com.work.domain;

// Generated 2014-8-15 22:54:39 by Hibernate Tools 3.2.2.GA

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.GenericGenerator;

/**
 * TMemberResume generated by hbm2java
 */
@Entity
@Table(name = "T_MEMBER_RESUME")
public class MemberResume implements java.io.Serializable {
	
	private static final long serialVersionUID = 7168750393937424808L;
	
	private String resumeId;
	private MemberInfo memberInfo = new MemberInfo();
	private String resumeEmail;
	private String title;
	private String description;
	private Integer hopeSalary;
	private String voicePath;
	private Integer phoneOpen;
	private Integer employStatus;
	private Date updateTime;
	private List<PartTimeType> partTimeTypes= new ArrayList<PartTimeType>(0);
	private String experience;
	private Integer stickStatus;
	private Integer isRecommend;
	private Long praiseNum;
	private Long commentNum;
	private Long reportNum;
	private Long browseNum;
	private Long consultationNum;
	private Long notInterestedNum;

	public MemberResume() {
	}

	public MemberResume(String resumeId, MemberInfo memberInfo) {
		this.resumeId = resumeId;
		this.memberInfo = memberInfo;
	}

	public MemberResume(String resumeId, MemberInfo memberInfo, String resumeEmail,
			String title, String description, Integer hopeSalary,
			String voicePath, Integer phoneOpen, Integer employStatus,
			Date updateTime, List<PartTimeType> partTimeTypes, String experience,
			Integer stickStatus, Integer isRecommend, Long praiseNum, Long commentNum,
			Long reportNum, Long browseNum, Long consultationNum,
			Long notInterestedNum) {
		this.resumeId = resumeId;
		this.memberInfo = memberInfo;
		this.resumeEmail = resumeEmail;
		this.title = title;
		this.description = description;
		this.hopeSalary = hopeSalary;
		this.voicePath = voicePath;
		this.phoneOpen = phoneOpen;
		this.employStatus = employStatus;
		this.partTimeTypes = partTimeTypes;
		this.updateTime = updateTime;
		this.experience = experience;
		this.stickStatus = stickStatus;
		this.isRecommend = isRecommend;
		this.praiseNum = praiseNum;
		this.commentNum = commentNum;
		this.reportNum = reportNum;
		this.browseNum = browseNum;
		this.consultationNum = consultationNum;
		this.notInterestedNum = notInterestedNum;
	}
	
	@GenericGenerator(name = "generator", strategy = "uuid.hex")
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "RESUME_ID", unique = true, nullable = false, length = 32)
	public String getResumeId() {
		return this.resumeId;
	}

	public void setResumeId(String resumeId) {
		this.resumeId = resumeId;
	}

	@ManyToOne(fetch = FetchType.EAGER, cascade=(CascadeType.ALL))
	@JoinColumn(name = "MEMBER_ID")
	public MemberInfo getMemberInfo() {
		return this.memberInfo;
	}

	public void setMemberInfo(MemberInfo memberInfo) {
		this.memberInfo = memberInfo;
	}

	@Column(name = "RESUME_EMAIL", length = 100)
	public String getResumeEmail() {
		return this.resumeEmail;
	}

	public void setResumeEmail(String resumeEmail) {
		this.resumeEmail = resumeEmail;
	}

	@Column(name = "TITLE", length = 128)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "DESCRIPTION", length = 250)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "HOPE_SALARY")
	public Integer getHopeSalary() {
		return this.hopeSalary;
	}

	public void setHopeSalary(Integer hopeSalary) {
		this.hopeSalary = hopeSalary;
	}

	@Column(name = "VOICE_PATH", length = 100)
	public String getVoicePath() {
		return this.voicePath;
	}

	public void setVoicePath(String voicePath) {
		this.voicePath = voicePath;
	}

	@Column(name = "PHONE_OPEN")
	public Integer getPhoneOpen() {
		return this.phoneOpen;
	}

	public void setPhoneOpen(Integer phoneOpen) {
		this.phoneOpen = phoneOpen;
	}

	@Column(name = "EMPLOY_STATUS")
	public Integer getEmployStatus() {
		return this.employStatus;
	}

	public void setEmployStatus(Integer employStatus) {
		this.employStatus = employStatus;
	}

	@ManyToMany(fetch = FetchType.EAGER)
	@OrderBy("createDate DESC")
    @JoinTable(name = "T_RESUME_JOB_TYPE", joinColumns = { @JoinColumn(name = "RESUME_ID") }, inverseJoinColumns = { @JoinColumn(name = "TYPE_ID") })   
	public List<PartTimeType> getPartTimeTypes() {
		return partTimeTypes;
	}

	public void setPartTimeTypes(List<PartTimeType> partTimeTypes) {
		this.partTimeTypes = partTimeTypes;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATE_TIME", length = 19)
	public Date getUpdateTime()
	{
		return updateTime;
	}

	public void setUpdateTime(Date updateTime)
	{
		this.updateTime = updateTime;
	}

	@Column(name = "EXPERIENCE", length = 500)
	public String getExperience() {
		return this.experience;
	}

	public void setExperience(String experience) {
		this.experience = experience;
	}

	@Column(name = "STICK_STATUS", insertable = false)
	public Integer getStickStatus() {
		return this.stickStatus;
	}

	public void setStickStatus(Integer stickStatus) {
		this.stickStatus = stickStatus;
	}

	@Column(name = "IS_RECOMMEND", insertable = false)
	public Integer getIsRecommend() {
		return this.isRecommend;
	}

	public void setIsRecommend(Integer isRecommend) {
		this.isRecommend = isRecommend;
	}

	@Column(name = "PRAISE_NUM", insertable = false)
	public Long getPraiseNum() {
		return this.praiseNum;
	}

	public void setPraiseNum(Long praiseNum) {
		this.praiseNum = praiseNum;
	}

	@Column(name = "COMMENT_NUM", insertable = false)
	public Long getCommentNum() {
		return this.commentNum;
	}

	public void setCommentNum(Long commentNum) {
		this.commentNum = commentNum;
	}

	@Column(name = "REPORT_NUM", insertable = false)
	public Long getReportNum() {
		return this.reportNum;
	}

	public void setReportNum(Long reportNum) {
		this.reportNum = reportNum;
	}

	@Column(name = "BROWSE_NUM", insertable = false)
	public Long getBrowseNum() {
		return this.browseNum;
	}

	public void setBrowseNum(Long browseNum) {
		this.browseNum = browseNum;
	}

	@Column(name = "CONSULTATION_NUM", insertable = false)
	public Long getConsultationNum() {
		return this.consultationNum;
	}

	public void setConsultationNum(Long consultationNum) {
		this.consultationNum = consultationNum;
	}

	@Column(name = "NOT_INTERESTED_NUM", insertable = false)
	public Long getNotInterestedNum() {
		return this.notInterestedNum;
	}

	public void setNotInterestedNum(Long notInterestedNum) {
		this.notInterestedNum = notInterestedNum;
	}
}
